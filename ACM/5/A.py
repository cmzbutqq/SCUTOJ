'''
题目描述
两个同学在玩取石子游戏，他们觉得单纯的取石子太弱智了，于是他们对取石子的数量做出了一定限制，他们每次操作只能取走合数个石子。已知目前有 n 颗石子，小 A 先手，最后取完石子的同学获胜，两位同学都绝顶聪明，问谁能赢。


输入格式
一个整数 t, 表示有 t 组样例，接下来 t 行，每行一个整数 n, 表示石子个数（保证 1≤t≤1e5,1≤n≤2e9）


输出格式
一共 n 行，每行一个数，A 表示 A 赢，B 表示 B 赢


样例数据
输入

4
6
11
20
7
输出

A
A
B
A

备注
非合数，即 1 或质数（如 2,3,5,7,11...）
参考巴什博弈
Python 性能要好
'''
def solve(n):
    """判断谁能获胜
    
    通过分析样例和游戏规则，归纳出胜负态规律：
    1. 当n=1,2,3时，先手无法取走任何合数，所以先手必败
    2. 当n>=4时：
       - 如果n是合数，先手可以直接取走全部n个石子获胜
       - 如果n是质数，先手可以取走(n-2)个石子(这是合数)，使后手面临n=2的局面，后手必败
    
    简而言之，除了n=1,2,3的特殊情况外，先手总是获胜
    """
    if n <= 3:
        return "B"  # 特殊情况：n=1,2,3时先手必败
    else:
        return "A"  # 其余所有情况先手必胜

def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        print(solve(n))

if __name__ == "__main__":
    main()

def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        print(solve(n))

if __name__ == "__main__":
    main()